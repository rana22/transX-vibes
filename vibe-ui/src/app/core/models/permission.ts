import { EntityBase } from './entityBase';
import { Injectable} from '@angular/core';
import {
  core, MetadataStore, EntityType, AutoGeneratedKeyType, DataProperty, DataType,
  NavigationProperty, 
} from 'breeze-client';
import { NavigationPropertyConfig } from 'breeze-client/src/entity-metadata';

@Injectable()
export class Permission extends EntityBase {

  id: number;
  url: string;
  path: string;
  method: string;
  title: string;
  description: string;

  constructor() {
    super();
  }

  public init(metadataStore:MetadataStore) {

    this.entityType = new EntityType({
      shortName: "Permission",
      namespace: "TDK",
      defaultResourceName: "Permission",
      autoGeneratedKeyType: AutoGeneratedKeyType.Identity,
      dataProperties: [
        new DataProperty({
          name: "id",
          dataType: DataType.Int32,
          isPartOfKey: true
        }),
        new DataProperty({
          name: "url",
          dataType: DataType.String
        }),
        new DataProperty({
          name: "path",
          dataType: DataType.String
        }),
        new DataProperty({
          name: "method",
          dataType: DataType.String
        }),
        new DataProperty({
          name: "title",
          dataType: DataType.String
        }),
        new DataProperty({
          name: "description",
          dataType: DataType.String
        })
      ],
      navigationProperties: [
        new NavigationProperty(<NavigationPropertyConfig>{
          entityTypeName: "RolePermissionMap:#TDK",
          associationName: "RolePermissionMap_Permissions",
          name: "rolePermissionMap",
          isScalar: false,
          invForeignKeyNames: ["permissionId"]
        })
      ]
    });

    metadataStore.addEntityType(this.entityType);
    metadataStore.registerEntityTypeCtor('Permission', Permission, Permission.initializer);
    this.entityType.createEntity();

  }
  /// [Initializer
  static initializer(entity:Permission) {
  }

}
