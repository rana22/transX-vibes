import { EntityBase } from './entityBase';
import { Injectable} from '@angular/core';
import {
  core, MetadataStore, EntityType, AutoGeneratedKeyType, DataProperty, DataType,
   NavigationProperty
} from 'breeze-client';
import {Role} from "./role";
import { NavigationPropertyConfig } from 'breeze-client/src/entity-metadata';

@Injectable()
export class User extends EntityBase {

    id?: number;
    username: string;
    email: string;
    firstName: string;
    lastName: string;
    status: string;
  
    roles: Role[];
  
    constructor() {
      super();
    }

    public init(metadataStore:MetadataStore) {

        this.entityType = new EntityType({
          shortName: "User",
          namespace: "TXV",
          defaultResourceName: "User",
          autoGeneratedKeyType: AutoGeneratedKeyType.Identity,
          dataProperties: [
            new DataProperty({
              name: "id",
              dataType: DataType.Int32,
              isPartOfKey: true
            }),
            new DataProperty({
              name: "username",
              dataType: DataType.String
            }),
            new DataProperty({
              name: "email",
              dataType: DataType.String
            }),
            new DataProperty({
              name: "firstName",
              dataType: DataType.String
            }),
            new DataProperty({
              name: "lastName",
              dataType: DataType.String
            }),
            new DataProperty({
              name: "status",
              dataType: DataType.String
            })
          ],
          navigationProperties: [
            new NavigationProperty(<NavigationPropertyConfig>{
              entityTypeName: "UserRoleMap:#TXV",
              associationName: "UserRoleMap_User",
              name: "userRoleMap",
              isScalar: false,
              invForeignKeyNames: ["userId"]
            })
          ]
        });
    
        metadataStore.addEntityType(this.entityType);
        metadataStore.registerEntityTypeCtor('User', User, User.initializer);
        this.entityType.createEntity();
    
      }
      /// [Initializer
      static initializer(entity:User) {
      }

}